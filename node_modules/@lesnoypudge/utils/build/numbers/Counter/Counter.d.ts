import { ListenerStoreCallback } from '../../index.js';
type Args = [value: number];
type StoreCallback = ListenerStoreCallback<Args>;
export declare class Counter {
    private count;
    private initialCount;
    private step;
    private initialStep;
    private listenerStore?;
    constructor(initialCount?: number, initialStep?: number);
    setCount(value: number): void;
    set: (value: number) => void;
    getCount(): number;
    get: () => number;
    setInitialCount(value: number): void;
    getInitialCount(): number;
    setStep(value: number): void;
    getStep(): number;
    setInitialStep(value: number): void;
    getInitialStep(): number;
    increase(value?: number): void;
    inc: (value?: number) => void;
    decrease(value?: number): void;
    dec: (value?: number) => void;
    resetCount(): void;
    resetStep(): void;
    reset(): void;
    onCountChange(cb: StoreCallback): () => void;
}
export {};
